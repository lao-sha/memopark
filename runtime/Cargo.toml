[package]
name = "memopark-runtime"
description = "A solochain runtime template built with Substrate, part of Polkadot Sdk."
version = "0.1.0"
license = "Unlicense"
authors.workspace = true
homepage.workspace = true
repository.workspace = true
edition.workspace = true
publish = false

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
codec = { features = ["derive"], workspace = true }
frame-benchmarking = { optional = true, workspace = true }
frame-executive = { git = "https://github.com/paritytech/polkadot-sdk.git", tag = "polkadot-v1.18.9", default-features = false }
frame-metadata-hash-extension = { git = "https://github.com/paritytech/polkadot-sdk.git", tag = "polkadot-v1.18.9", default-features = false }
frame-support = { features = ["experimental"], git = "https://github.com/paritytech/polkadot-sdk.git", tag = "polkadot-v1.18.9", default-features = false }
frame-system-benchmarking = { optional = true, git = "https://github.com/paritytech/polkadot-sdk.git", tag = "polkadot-v1.18.9", default-features = false }
frame-system-rpc-runtime-api = { git = "https://github.com/paritytech/polkadot-sdk.git", tag = "polkadot-v1.18.9", default-features = false }
frame-system = { git = "https://github.com/paritytech/polkadot-sdk.git", tag = "polkadot-v1.18.9", default-features = false }
frame-try-runtime = { optional = true, git = "https://github.com/paritytech/polkadot-sdk.git", tag = "polkadot-v1.18.9", default-features = false }
pallet-aura = { git = "https://github.com/paritytech/polkadot-sdk.git", tag = "polkadot-v1.18.9", default-features = false }
pallet-balances = { git = "https://github.com/paritytech/polkadot-sdk.git", tag = "polkadot-v1.18.9", default-features = false }
pallet-grandpa = { git = "https://github.com/paritytech/polkadot-sdk.git", tag = "polkadot-v1.18.9", default-features = false }
pallet-forwarder = { path = "../pallets/forwarder", default-features = false }
pallet-market-maker = { path = "../pallets/market-maker", default-features = false }
pallet-otc-maker = { path = "../pallets/otc-maker", default-features = false }
pallet-otc-listing = { path = "../pallets/otc-listing", default-features = false }
pallet-otc-order = { path = "../pallets/otc-order", default-features = false }
pallet-escrow = { path = "../pallets/escrow", default-features = false }
pallet-arbitration = { path = "../pallets/arbitration", default-features = false }
# replaced old ritual/cemetery
pallet-memo-park = { path = "../pallets/memo-park", default-features = false }
pallet-memo-grave = { path = "../pallets/memo-grave", default-features = false }
pallet-ledger = { path = "../pallets/ledger", default-features = false }
pallet-deceased = { path = "../pallets/deceased", default-features = false }
pallet-deceased-media = { path = "../pallets/deceased-media", default-features = false }
pallet-deceased-text = { path = "../pallets/deceased-text", default-features = false }
pallet-memo-offerings = { path = "../pallets/memo-offerings", default-features = false }
pallet-memo-sacrifice = { path = "../pallets/memo-sacrifice", default-features = false }
pallet-memo-referrals = { path = "../pallets/memo-referrals", default-features = false }
pallet-memo-affiliate = { path = "../pallets/memo-affiliate", default-features = false }
pallet-evidence = { path = "../pallets/evidence", default-features = false }
pallet-identity = { path = "../pallets/identity", default-features = false }
pallet-memo-ipfs = { path = "../pallets/memo-ipfs", default-features = false }
pallet-memo-content-governance = { path = "../pallets/memo-content-governance", default-features = false }
pallet-collective = { path = "../pallets/collective", default-features = false }
pallet-memo-pet = { path = "../pallets/memo-pet", default-features = false }
pallet-memo-bridge = { path = "../pallets/memo-bridge", default-features = false }
pallet-pricing = { path = "../pallets/pricing", default-features = false }
pallet-otc-claim = { path = "../pallets/otc-claim", default-features = false }
pallet-sudo.workspace = true
pallet-template.workspace = true
pallet-timestamp.workspace = true
pallet-treasury = { path = "../pallets/treasury", default-features = false }
pallet-origin-restriction = { path = "../pallets/origin-restriction", default-features = false }
pallet-fee-guard = { path = "../pallets/fee-guard", default-features = false }
pallet-transaction-payment-rpc-runtime-api.workspace = true
pallet-transaction-payment.workspace = true
scale-info = { features = ["derive", "serde"], workspace = true }
serde_json = { workspace = true, default-features = false, features = ["alloc"] }
sp-api.workspace = true
sp-block-builder.workspace = true
sp-consensus-aura = { features = ["serde"], workspace = true }
sp-consensus-grandpa = { features = ["serde"], workspace = true }
sp-core = { features = ["serde"], workspace = true }
sp-genesis-builder.workspace = true
sp-inherents.workspace = true
sp-keyring.workspace = true
sp-offchain.workspace = true
sp-runtime = { features = ["serde"], workspace = true }
sp-session.workspace = true
sp-storage.workspace = true
sp-transaction-pool.workspace = true
sp-version = { features = ["serde"], workspace = true }

[build-dependencies]
substrate-wasm-builder = { optional = true, workspace = true, default-features = true }

[features]
default = ["std"]
std = [
	"codec/std",
	"frame-benchmarking?/std",
	"frame-executive/std",
	"frame-metadata-hash-extension/std",
	"frame-support/std",
	"frame-system-benchmarking?/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",
	"frame-try-runtime?/std",
	"pallet-aura/std",
	"pallet-balances/std",
	"pallet-grandpa/std",
	"pallet-forwarder/std",
	"pallet-market-maker/std",
	"pallet-otc-maker/std",
	"pallet-otc-listing/std",
	"pallet-otc-order/std",
	"pallet-escrow/std",
	"pallet-arbitration/std",
	"pallet-memo-park/std",
	"pallet-memo-grave/std",
	"pallet-ledger/std",
	"pallet-deceased/std",
"pallet-deceased-media/std",
"pallet-deceased-text/std",
	"pallet-memo-offerings/std",
	"pallet-memo-sacrifice/std",
	"pallet-memo-referrals/std",
	"pallet-memo-affiliate/std",
	"pallet-evidence/std",
	"pallet-identity/std",
	"pallet-memo-ipfs/std",
    "pallet-memo-content-governance/std",
	"pallet-collective/std",
	"pallet-memo-pet/std",
    "pallet-memo-bridge/std",
    "pallet-pricing/std",
    "pallet-otc-claim/std",
	"pallet-sudo/std",
	"pallet-template/std",
	"pallet-timestamp/std",
	"pallet-treasury/std",
	"pallet-origin-restriction/std",
	"pallet-fee-guard/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",
	"scale-info/std",
	"serde_json/std",
	"sp-api/std",
	"sp-block-builder/std",
	"sp-consensus-aura/std",
	"sp-consensus-grandpa/std",
	"sp-core/std",
	"sp-genesis-builder/std",
	"sp-inherents/std",
	"sp-keyring/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-storage/std",
	"sp-transaction-pool/std",
	"sp-version/std",
	"substrate-wasm-builder",
]

runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-collective/runtime-benchmarks",
	"pallet-grandpa/runtime-benchmarks",
	"pallet-sudo/runtime-benchmarks",
	"pallet-template/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
]

try-runtime = [
	"frame-executive/try-runtime",
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"frame-try-runtime/try-runtime",
	"pallet-aura/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-grandpa/try-runtime",
	"pallet-sudo/try-runtime",
	"pallet-template/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"sp-runtime/try-runtime",
]

# Enable the metadata hash generation.
#
# This is hidden behind a feature because it increases the compile time.
# The wasm binary needs to be compiled twice, once to fetch the metadata,
# generate the metadata hash and then a second time with the
# `RUNTIME_METADATA_HASH` environment variable set for the `CheckMetadataHash`
# extension.
metadata-hash = ["substrate-wasm-builder/metadata-hash"]

# A convenience feature for enabling things when doing a build
# for an on-chain release.
#
# It enables both the metadata-hash generation and disables the logging from
# `sp-api` in the runtime, which is just in memory and never visible.
on-chain-release-build = ["metadata-hash", "sp-api/disable-logging"]
